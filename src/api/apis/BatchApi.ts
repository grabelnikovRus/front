/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime'
import {
  BatchRequest,
  BatchRequestFromJSON,
  BatchRequestToJSON,
  BatchResponse,
  BatchResponseFromJSON,
  BatchResponseToJSON,
  EmptyBody,
  EmptyBodyFromJSON,
  EmptyBodyToJSON,
} from '../models'

export interface BatchOperationRequest {
  batchRequest: BatchRequest
}

export interface BatchV2Request {
  batchRequest: BatchRequest
}

/**
 *
 */
export class BatchApi extends runtime.BaseAPI {
  /**
   * Массовый вызов методов API
   */
  async batchRaw(
    requestParameters: BatchOperationRequest,
  ): Promise<runtime.ApiResponse<BatchResponse>> {
    if (requestParameters.batchRequest === null || requestParameters.batchRequest === undefined) {
      throw new runtime.RequiredError(
        'batchRequest',
        'Required parameter requestParameters.batchRequest was null or undefined when calling batch.',
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request({
      path: `/batch-v1`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: BatchRequestToJSON(requestParameters.batchRequest),
    })

    return new runtime.JSONApiResponse(response, (jsonValue) => BatchResponseFromJSON(jsonValue))
  }

  /**
   * Массовый вызов методов API
   */
  async batch(batchRequest: BatchRequest): Promise<BatchResponse> {
    const response = await this.batchRaw({ batchRequest: batchRequest })
    return await response.value()
  }

  /**
   * Массовый вызов методов API V2
   */
  async batchV2Raw(
    requestParameters: BatchV2Request,
  ): Promise<runtime.ApiResponse<BatchResponse>> {
    if (requestParameters.batchRequest === null || requestParameters.batchRequest === undefined) {
      throw new runtime.RequiredError(
        'batchRequest',
        'Required parameter requestParameters.batchRequest was null or undefined when calling batchV2.',
      )
    }

    const queryParameters: any = {}

    const headerParameters: runtime.HTTPHeaders = {}

    headerParameters['Content-Type'] = 'application/json'

    const response = await this.request({
      path: `/batch-v2`,
      method: 'POST',
      headers: headerParameters,
      query: queryParameters,
      body: BatchRequestToJSON(requestParameters.batchRequest),
    })

    return new runtime.JSONApiResponse(response, (jsonValue) => BatchResponseFromJSON(jsonValue))
  }

  /**
   * Массовый вызов методов API V2
   */
  async batchV2(batchRequest: BatchRequest): Promise<BatchResponse> {
    const response = await this.batchV2Raw({ batchRequest: batchRequest })
    return await response.value()
  }
}
