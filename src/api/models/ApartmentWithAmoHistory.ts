/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  Address,
  AddressFromJSON,
  AddressFromJSONTyped,
  AddressToJSON,
  Apartment,
  ApartmentFromJSON,
  ApartmentFromJSONTyped,
  ApartmentToJSON,
  ApartmentAmoHistory,
  ApartmentAmoHistoryFromJSON,
  ApartmentAmoHistoryFromJSONTyped,
  ApartmentAmoHistoryToJSON,
  ApartmentAmoHistoryAmoHistory,
  ApartmentAmoHistoryAmoHistoryFromJSON,
  ApartmentAmoHistoryAmoHistoryFromJSONTyped,
  ApartmentAmoHistoryAmoHistoryToJSON,
  ApartmentImages,
  ApartmentImagesFromJSON,
  ApartmentImagesFromJSONTyped,
  ApartmentImagesToJSON,
  ApartmentReference,
  ApartmentReferenceFromJSON,
  ApartmentReferenceFromJSONTyped,
  ApartmentReferenceToJSON,
  ApartmentRoominess,
  ApartmentRoominessFromJSON,
  ApartmentRoominessFromJSONTyped,
  ApartmentRoominessToJSON,
  ApartmentSubwayStations,
  ApartmentSubwayStationsFromJSON,
  ApartmentSubwayStationsFromJSONTyped,
  ApartmentSubwayStationsToJSON,
  ApartmentVideos,
  ApartmentVideosFromJSON,
  ApartmentVideosFromJSONTyped,
  ApartmentVideosToJSON,
} from './'

/**
 *
 * @export
 * @interface ApartmentWithAmoHistory
 */
export interface ApartmentWithAmoHistory {
  /**
   * Уникальный идентификатор UUID версии 4
   * @type {string}
   * @memberof ApartmentWithAmoHistory
   */
  uuid: string
  /**
   * Идентификатор в АМО. На сайте будет использоваться как артикул
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  amoId: number
  /**
   *
   * @type {Address}
   * @memberof ApartmentWithAmoHistory
   */
  address: Address
  /**
   * Станции метро
   * @type {Array<ApartmentSubwayStations>}
   * @memberof ApartmentWithAmoHistory
   */
  subwayStations: Array<ApartmentSubwayStations>
  /**
   *
   * @type {Array<ApartmentVideos>}
   * @memberof ApartmentWithAmoHistory
   */
  videos: Array<ApartmentVideos>
  /**
   *
   * @type {Array<ApartmentImages>}
   * @memberof ApartmentWithAmoHistory
   */
  images: Array<ApartmentImages>
  /**
   *
   * @type {ApartmentRoominess}
   * @memberof ApartmentWithAmoHistory
   */
  roominess: ApartmentRoominess
  /**
   * Количество балконов в квартире
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  balconiesCount: number
  /**
   * Количество лоджий в квартире
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  loggiasCount: number | null
  /**
   * Количество совмещенных санузлов
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  combinedWcsCount: number
  /**
   * Количество раздельных санузлов
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  separateWcsCount: number
  /**
   * Этаж квартиры
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  floorNumber: number
  /**
   * Полная площадь квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  fullArea: number
  /**
   * Жилая площадь квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  livingArea: number | null
  /**
   * Площадь кухни квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  kitchensArea: number | null
  /**
   * Суммарная площадь балконов и лоджий квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  balconiesAndLoggiasArea: number | null
  /**
   * Суммарная площадь спален квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  bedroomsArea: number | null
  /**
   * Суммарная площадь ванных комнат квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  bathroomsArea: number | null
  /**
   * Суммарная площадь туалетов квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  wcsArea: number | null
  /**
   * Суммарная площадь прихожих квартиры в квадратных дециметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  hallwaysArea: number | null
  /**
   * Стоимость квартиры в рублях без копеек
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  priceRub: number
  /**
   * Серия здания
   * @type {string}
   * @memberof ApartmentWithAmoHistory
   */
  buildingSeries: string | null
  /**
   * Год постройки здания
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  buildingConstructionYear: number
  /**
   * Коментарий к году постройки здания
   * @type {string}
   * @memberof ApartmentWithAmoHistory
   */
  buildingConstructionYearComment: string | null
  /**
   * Количество этажей в здании
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  buildingFloorCount: number
  /**
   * Высота потолков в здании в сантиметрах
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  buildingCeilingHeight: number | null
  /**
   * Количество пассажирских лифтов в здании
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  buildingPassengerElevatorsCount: number | null
  /**
   * Количество грузовых лифтов в здании
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  buildingFreightElevatorsCount: number | null
  /**
   * Наличие мусоропровода в здании
   * @type {boolean}
   * @memberof ApartmentWithAmoHistory
   */
  isBuildingHasGarbageChute: boolean | null
  /**
   * Количество подъездов в здании
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  buildingPorchsCount: number | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  buildingType: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  buildingParkingType: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  buildingDeveloper: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  housingComplex: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  housingComplexBuilding: ApartmentReference | null
  /**
   * Типы продажи
   * @type {Array<ApartmentReference>}
   * @memberof ApartmentWithAmoHistory
   */
  saleTypes: Array<ApartmentReference>
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  housingType: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  decorationType: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  heatingType: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  roomType: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  stoveType: ApartmentReference | null
  /**
   *
   * @type {ApartmentReference}
   * @memberof ApartmentWithAmoHistory
   */
  windowViewType: ApartmentReference | null
  /**
   * Номер телефона для обращений по квартире
   * @type {string}
   * @memberof ApartmentWithAmoHistory
   */
  contactPhoneNumber: string
  /**
   * Наличие перепланировки
   * @type {boolean}
   * @memberof ApartmentWithAmoHistory
   */
  isRedevelopment: boolean | null
  /**
   * Ставка по ипотеке по базовым параметрам
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  loanRate: number | null
  /**
   * Скидка на квартиру
   * @type {number}
   * @memberof ApartmentWithAmoHistory
   */
  discountRate: number | null
  /**
   * Статус квартиры: listed = актуальна, unlisted = продана
   * @type {string}
   * @memberof ApartmentWithAmoHistory
   */
  statusLabel?: ApartmentWithAmoHistoryStatusLabelEnum
  /**
   *
   * @type {ApartmentAmoHistoryAmoHistory}
   * @memberof ApartmentWithAmoHistory
   */
  amoHistory: ApartmentAmoHistoryAmoHistory | null
}

/**
 * @export
 * @enum {string}
 */
export enum ApartmentWithAmoHistoryStatusLabelEnum {
  Listed = 'listed',
  Unlisted = 'unlisted',
}

export function ApartmentWithAmoHistoryFromJSON(json: any): ApartmentWithAmoHistory {
  return ApartmentWithAmoHistoryFromJSONTyped(json, false)
}

export function ApartmentWithAmoHistoryFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ApartmentWithAmoHistory {
  if (json === undefined || json === null) {
    return json
  }
  return {
    uuid: json['uuid'],
    amoId: json['amoId'],
    address: AddressFromJSON(json['address']),
    subwayStations: (json['subwayStations'] as Array<any>).map(ApartmentSubwayStationsFromJSON),
    videos: (json['videos'] as Array<any>).map(ApartmentVideosFromJSON),
    images: (json['images'] as Array<any>).map(ApartmentImagesFromJSON),
    roominess: ApartmentRoominessFromJSON(json['roominess']),
    balconiesCount: json['balconiesCount'],
    loggiasCount: json['loggiasCount'],
    combinedWcsCount: json['combinedWcsCount'],
    separateWcsCount: json['separateWcsCount'],
    floorNumber: json['floorNumber'],
    fullArea: json['fullArea'],
    livingArea: json['livingArea'],
    kitchensArea: json['kitchensArea'],
    balconiesAndLoggiasArea: json['balconiesAndLoggiasArea'],
    bedroomsArea: json['bedroomsArea'],
    bathroomsArea: json['bathroomsArea'],
    wcsArea: json['wcsArea'],
    hallwaysArea: json['hallwaysArea'],
    priceRub: json['priceRub'],
    buildingSeries: json['buildingSeries'],
    buildingConstructionYear: json['buildingConstructionYear'],
    buildingConstructionYearComment: json['buildingConstructionYearComment'],
    buildingFloorCount: json['buildingFloorCount'],
    buildingCeilingHeight: json['buildingCeilingHeight'],
    buildingPassengerElevatorsCount: json['buildingPassengerElevatorsCount'],
    buildingFreightElevatorsCount: json['buildingFreightElevatorsCount'],
    isBuildingHasGarbageChute: json['isBuildingHasGarbageChute'],
    buildingPorchsCount: json['buildingPorchsCount'],
    buildingType: ApartmentReferenceFromJSON(json['buildingType']),
    buildingParkingType: ApartmentReferenceFromJSON(json['buildingParkingType']),
    buildingDeveloper: ApartmentReferenceFromJSON(json['buildingDeveloper']),
    housingComplex: ApartmentReferenceFromJSON(json['housingComplex']),
    housingComplexBuilding: ApartmentReferenceFromJSON(json['housingComplexBuilding']),
    saleTypes: (json['saleTypes'] as Array<any>).map(ApartmentReferenceFromJSON),
    housingType: ApartmentReferenceFromJSON(json['housingType']),
    decorationType: ApartmentReferenceFromJSON(json['decorationType']),
    heatingType: ApartmentReferenceFromJSON(json['heatingType']),
    roomType: ApartmentReferenceFromJSON(json['roomType']),
    stoveType: ApartmentReferenceFromJSON(json['stoveType']),
    windowViewType: ApartmentReferenceFromJSON(json['windowViewType']),
    contactPhoneNumber: json['contactPhoneNumber'],
    isRedevelopment: json['isRedevelopment'],
    loanRate: json['loanRate'],
    discountRate: json['discountRate'],
    statusLabel: !exists(json, 'statusLabel') ? undefined : json['statusLabel'],
    amoHistory: ApartmentAmoHistoryAmoHistoryFromJSON(json['amoHistory']),
  }
}

export function ApartmentWithAmoHistoryToJSON(value?: ApartmentWithAmoHistory | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    uuid: value.uuid,
    amoId: value.amoId,
    address: AddressToJSON(value.address),
    subwayStations: (value.subwayStations as Array<any>).map(ApartmentSubwayStationsToJSON),
    videos: (value.videos as Array<any>).map(ApartmentVideosToJSON),
    images: (value.images as Array<any>).map(ApartmentImagesToJSON),
    roominess: ApartmentRoominessToJSON(value.roominess),
    balconiesCount: value.balconiesCount,
    loggiasCount: value.loggiasCount,
    combinedWcsCount: value.combinedWcsCount,
    separateWcsCount: value.separateWcsCount,
    floorNumber: value.floorNumber,
    fullArea: value.fullArea,
    livingArea: value.livingArea,
    kitchensArea: value.kitchensArea,
    balconiesAndLoggiasArea: value.balconiesAndLoggiasArea,
    bedroomsArea: value.bedroomsArea,
    bathroomsArea: value.bathroomsArea,
    wcsArea: value.wcsArea,
    hallwaysArea: value.hallwaysArea,
    priceRub: value.priceRub,
    buildingSeries: value.buildingSeries,
    buildingConstructionYear: value.buildingConstructionYear,
    buildingConstructionYearComment: value.buildingConstructionYearComment,
    buildingFloorCount: value.buildingFloorCount,
    buildingCeilingHeight: value.buildingCeilingHeight,
    buildingPassengerElevatorsCount: value.buildingPassengerElevatorsCount,
    buildingFreightElevatorsCount: value.buildingFreightElevatorsCount,
    isBuildingHasGarbageChute: value.isBuildingHasGarbageChute,
    buildingPorchsCount: value.buildingPorchsCount,
    buildingType: ApartmentReferenceToJSON(value.buildingType),
    buildingParkingType: ApartmentReferenceToJSON(value.buildingParkingType),
    buildingDeveloper: ApartmentReferenceToJSON(value.buildingDeveloper),
    housingComplex: ApartmentReferenceToJSON(value.housingComplex),
    housingComplexBuilding: ApartmentReferenceToJSON(value.housingComplexBuilding),
    saleTypes: (value.saleTypes as Array<any>).map(ApartmentReferenceToJSON),
    housingType: ApartmentReferenceToJSON(value.housingType),
    decorationType: ApartmentReferenceToJSON(value.decorationType),
    heatingType: ApartmentReferenceToJSON(value.heatingType),
    roomType: ApartmentReferenceToJSON(value.roomType),
    stoveType: ApartmentReferenceToJSON(value.stoveType),
    windowViewType: ApartmentReferenceToJSON(value.windowViewType),
    contactPhoneNumber: value.contactPhoneNumber,
    isRedevelopment: value.isRedevelopment,
    loanRate: value.loanRate,
    discountRate: value.discountRate,
    statusLabel: value.statusLabel,
    amoHistory: ApartmentAmoHistoryAmoHistoryToJSON(value.amoHistory),
  }
}
