/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  CatalogCheckboxGroup,
  CatalogCheckboxGroupFromJSON,
  CatalogCheckboxGroupFromJSONTyped,
  CatalogCheckboxGroupToJSON,
  CatalogNumberNew,
  CatalogNumberNewFromJSON,
  CatalogNumberNewFromJSONTyped,
  CatalogNumberNewToJSON,
  CatalogTextNew,
  CatalogTextNewFromJSON,
  CatalogTextNewFromJSONTyped,
  CatalogTextNewToJSON,
} from './'

/**
 *
 * @export
 * @interface CatalogSettingsNew
 */
export interface CatalogSettingsNew {
  /**
   *
   * @type {CatalogTextNew}
   * @memberof CatalogSettingsNew
   */
  address: CatalogTextNew
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  balconyType: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  buildingCeilingHeight: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  buildingFloorCountMax: CatalogNumberNew
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  buildingGarbageChute: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  buildingFloorCountMin: CatalogNumberNew
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  buildingParkingTypes: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  buildingTypes: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  decorationTypes: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  elevatorType: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  floorNumberMax: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  floorNumberMin: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  fullAreaMax: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  fullAreaMin: CatalogNumberNew
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  housingTypes: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  kitchensAreaMax: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  kitchensAreaMin: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  livingAreaMax: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  livingAreaMin: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  priceRubMax: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  priceRubMin: CatalogNumberNew
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  roominess: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  saleTypes: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  wcsType: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogCheckboxGroup}
   * @memberof CatalogSettingsNew
   */
  windowViewTypes: CatalogCheckboxGroup
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  loanRateMax: CatalogNumberNew
  /**
   *
   * @type {CatalogNumberNew}
   * @memberof CatalogSettingsNew
   */
  loanRateMin: CatalogNumberNew
}

export function CatalogSettingsNewFromJSON(json: any): CatalogSettingsNew {
  return CatalogSettingsNewFromJSONTyped(json, false)
}

export function CatalogSettingsNewFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CatalogSettingsNew {
  if (json === undefined || json === null) {
    return json
  }
  return {
    address: CatalogTextNewFromJSON(json['address']),
    balconyType: CatalogCheckboxGroupFromJSON(json['balconyType']),
    buildingCeilingHeight: CatalogCheckboxGroupFromJSON(json['buildingCeilingHeight']),
    buildingFloorCountMax: CatalogNumberNewFromJSON(json['buildingFloorCountMax']),
    buildingGarbageChute: CatalogCheckboxGroupFromJSON(json['buildingGarbageChute']),
    buildingFloorCountMin: CatalogNumberNewFromJSON(json['buildingFloorCountMin']),
    buildingParkingTypes: CatalogCheckboxGroupFromJSON(json['buildingParkingTypes']),
    buildingTypes: CatalogCheckboxGroupFromJSON(json['buildingTypes']),
    decorationTypes: CatalogCheckboxGroupFromJSON(json['decorationTypes']),
    elevatorType: CatalogCheckboxGroupFromJSON(json['elevatorType']),
    floorNumberMax: CatalogNumberNewFromJSON(json['floorNumberMax']),
    floorNumberMin: CatalogNumberNewFromJSON(json['floorNumberMin']),
    fullAreaMax: CatalogNumberNewFromJSON(json['fullAreaMax']),
    fullAreaMin: CatalogNumberNewFromJSON(json['fullAreaMin']),
    housingTypes: CatalogCheckboxGroupFromJSON(json['housingTypes']),
    kitchensAreaMax: CatalogNumberNewFromJSON(json['kitchensAreaMax']),
    kitchensAreaMin: CatalogNumberNewFromJSON(json['kitchensAreaMin']),
    livingAreaMax: CatalogNumberNewFromJSON(json['livingAreaMax']),
    livingAreaMin: CatalogNumberNewFromJSON(json['livingAreaMin']),
    priceRubMax: CatalogNumberNewFromJSON(json['priceRubMax']),
    priceRubMin: CatalogNumberNewFromJSON(json['priceRubMin']),
    roominess: CatalogCheckboxGroupFromJSON(json['roominess']),
    saleTypes: CatalogCheckboxGroupFromJSON(json['saleTypes']),
    wcsType: CatalogCheckboxGroupFromJSON(json['wcsType']),
    windowViewTypes: CatalogCheckboxGroupFromJSON(json['windowViewTypes']),
    loanRateMax: CatalogNumberNewFromJSON(json['loanRateMax']),
    loanRateMin: CatalogNumberNewFromJSON(json['loanRateMin']),
  }
}

export function CatalogSettingsNewToJSON(value?: CatalogSettingsNew | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    address: CatalogTextNewToJSON(value.address),
    balconyType: CatalogCheckboxGroupToJSON(value.balconyType),
    buildingCeilingHeight: CatalogCheckboxGroupToJSON(value.buildingCeilingHeight),
    buildingFloorCountMax: CatalogNumberNewToJSON(value.buildingFloorCountMax),
    buildingGarbageChute: CatalogCheckboxGroupToJSON(value.buildingGarbageChute),
    buildingFloorCountMin: CatalogNumberNewToJSON(value.buildingFloorCountMin),
    buildingParkingTypes: CatalogCheckboxGroupToJSON(value.buildingParkingTypes),
    buildingTypes: CatalogCheckboxGroupToJSON(value.buildingTypes),
    decorationTypes: CatalogCheckboxGroupToJSON(value.decorationTypes),
    elevatorType: CatalogCheckboxGroupToJSON(value.elevatorType),
    floorNumberMax: CatalogNumberNewToJSON(value.floorNumberMax),
    floorNumberMin: CatalogNumberNewToJSON(value.floorNumberMin),
    fullAreaMax: CatalogNumberNewToJSON(value.fullAreaMax),
    fullAreaMin: CatalogNumberNewToJSON(value.fullAreaMin),
    housingTypes: CatalogCheckboxGroupToJSON(value.housingTypes),
    kitchensAreaMax: CatalogNumberNewToJSON(value.kitchensAreaMax),
    kitchensAreaMin: CatalogNumberNewToJSON(value.kitchensAreaMin),
    livingAreaMax: CatalogNumberNewToJSON(value.livingAreaMax),
    livingAreaMin: CatalogNumberNewToJSON(value.livingAreaMin),
    priceRubMax: CatalogNumberNewToJSON(value.priceRubMax),
    priceRubMin: CatalogNumberNewToJSON(value.priceRubMin),
    roominess: CatalogCheckboxGroupToJSON(value.roominess),
    saleTypes: CatalogCheckboxGroupToJSON(value.saleTypes),
    wcsType: CatalogCheckboxGroupToJSON(value.wcsType),
    windowViewTypes: CatalogCheckboxGroupToJSON(value.windowViewTypes),
    loanRateMax: CatalogNumberNewToJSON(value.loanRateMax),
    loanRateMin: CatalogNumberNewToJSON(value.loanRateMin),
  }
}
