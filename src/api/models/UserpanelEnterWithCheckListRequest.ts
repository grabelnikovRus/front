/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import { Source, SourceFromJSON, SourceFromJSONTyped, SourceToJSON } from './'

/**
 *
 * @export
 * @interface UserpanelEnterWithCheckListRequest
 */
export interface UserpanelEnterWithCheckListRequest {
  /**
   * Номер телефона
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  phone: string
  /**
   * Имя
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  gaId?: string | null
  /**
   * Адрес дома
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  address: string
  /**
   * Площадь квартиры, кв. м.
   * @type {number}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  area: number
  /**
   * Этаж
   * @type {number}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  floor: number
  /**
   * Комнатность
   * @type {number}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  roomType: UserpanelEnterWithCheckListRequestRoomTypeEnum
  /**
   * Цена в рублях
   * @type {number}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  price: number
  /**
   * Тип ремонта
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  renovationType: UserpanelEnterWithCheckListRequestRenovationTypeEnum
  /**
   * Если установить в false, то в ЛК выключится подбор
   * @type {boolean}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  needExchange?: boolean
  /**
   *
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  recaptchaToken: string | null
  /**
   *
   * @type {boolean}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  isMortgage: boolean
  /**
   *
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  objectType?: string
  /**
   *
   * @type {boolean}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  isInOperation?: boolean
  /**
   *
   * @type {Array<string>}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  peculiarities?: Array<string>
  /**
   *
   * @type {number}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  releaseYear?: number
  /**
   *
   * @type {number}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  releaseQuarter?: number
  /**
   *
   * @type {string}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  developer?: string
  /**
   *
   * @type {Source}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  source: Source
  /**
   *
   * @type {boolean}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  allowMarketing?: boolean
  /**
   * АПП подписан
   * @type {boolean}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  isTransferAcceptanceCertificate: boolean | null
  /**
   * Год последнего ремонта
   * @type {number}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  renovationYear: number | null
  /**
   * Право собственности получено
   * @type {boolean}
   * @memberof UserpanelEnterWithCheckListRequest
   */
  isOwnership: boolean | null
}

/**
 * @export
 * @enum {string}
 */
export enum UserpanelEnterWithCheckListRequestRoomTypeEnum {
  NUMBER_0 = 0,
  NUMBER_1 = 1,
  NUMBER_2 = 2,
  NUMBER_3 = 3,
}
/**
 * @export
 * @enum {string}
 */
export enum UserpanelEnterWithCheckListRequestRenovationTypeEnum {
  None = 'none',
  Cosmetic = 'cosmetic',
  Fresh = 'fresh',
}

export function UserpanelEnterWithCheckListRequestFromJSON(
  json: any,
): UserpanelEnterWithCheckListRequest {
  return UserpanelEnterWithCheckListRequestFromJSONTyped(json, false)
}

export function UserpanelEnterWithCheckListRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): UserpanelEnterWithCheckListRequest {
  if (json === undefined || json === null) {
    return json
  }
  return {
    phone: json['phone'],
    name: json['name'],
    gaId: !exists(json, 'ga_id') ? undefined : json['ga_id'],
    address: json['address'],
    area: json['area'],
    floor: json['floor'],
    roomType: json['room_type'],
    price: json['price'],
    renovationType: json['renovationType'],
    needExchange: !exists(json, 'needExchange') ? undefined : json['needExchange'],
    recaptchaToken: json['recaptchaToken'],
    isMortgage: json['isMortgage'],
    objectType: !exists(json, 'objectType') ? undefined : json['objectType'],
    isInOperation: !exists(json, 'isInOperation') ? undefined : json['isInOperation'],
    peculiarities: !exists(json, 'peculiarities') ? undefined : json['peculiarities'],
    releaseYear: !exists(json, 'releaseYear') ? undefined : json['releaseYear'],
    releaseQuarter: !exists(json, 'releaseQuarter') ? undefined : json['releaseQuarter'],
    developer: !exists(json, 'developer') ? undefined : json['developer'],
    source: SourceFromJSON(json['source']),
    allowMarketing: !exists(json, 'allow_marketing') ? undefined : json['allow_marketing'],
    isTransferAcceptanceCertificate: json['isTransferAcceptanceCertificate'],
    renovationYear: json['renovationYear'],
    isOwnership: json['isOwnership'],
  }
}

export function UserpanelEnterWithCheckListRequestToJSON(
  value?: UserpanelEnterWithCheckListRequest | null,
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    phone: value.phone,
    name: value.name,
    ga_id: value.gaId,
    address: value.address,
    area: value.area,
    floor: value.floor,
    room_type: value.roomType,
    price: value.price,
    renovationType: value.renovationType,
    needExchange: value.needExchange,
    recaptchaToken: value.recaptchaToken,
    isMortgage: value.isMortgage,
    objectType: value.objectType,
    isInOperation: value.isInOperation,
    peculiarities: value.peculiarities,
    releaseYear: value.releaseYear,
    releaseQuarter: value.releaseQuarter,
    developer: value.developer,
    source: SourceToJSON(value.source),
    allow_marketing: value.allowMarketing,
    isTransferAcceptanceCertificate: value.isTransferAcceptanceCertificate,
    renovationYear: value.renovationYear,
    isOwnership: value.isOwnership,
  }
}
