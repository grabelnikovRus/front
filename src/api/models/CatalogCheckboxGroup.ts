/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  CatalogCheckboxGroupOptions,
  CatalogCheckboxGroupOptionsFromJSON,
  CatalogCheckboxGroupOptionsFromJSONTyped,
  CatalogCheckboxGroupOptionsToJSON,
  Validation,
  ValidationFromJSON,
  ValidationFromJSONTyped,
  ValidationToJSON,
} from './'

/**
 *
 * @export
 * @interface CatalogCheckboxGroup
 */
export interface CatalogCheckboxGroup {
  /**
   *
   * @type {string}
   * @memberof CatalogCheckboxGroup
   */
  title: string
  /**
   *
   * @type {string}
   * @memberof CatalogCheckboxGroup
   */
  type: CatalogCheckboxGroupTypeEnum
  /**
   * - any - например "Количество комнат" - можно выбирать несколько в любых комбинациях
   * - only-one - например "Мусоропровод" - можно выбрать только один
   * - by-default - например "Высота потолков" - по-умолчанию выбран вариант initial,
   *   при выборе другого варианта - выбор с initial убирается,
   *   при выборе выборе варианта initial выбор с других вариантов снимается
   * @type {string}
   * @memberof CatalogCheckboxGroup
   */
  strategy: CatalogCheckboxGroupStrategyEnum
  /**
   * row - чекбосы в одну строку, каждый чекбокс занимает равную долю ширины
   * main - чекбоксы в одну строку, первый чекбокс растягивается на всю ширину
   * wrap - чекбоксы не растягиваются на всю строку, возможен перенос на новую строку
   * column - чекбоксы в колонку, каждый растянут на всю ширину, с иконками
   * @type {string}
   * @memberof CatalogCheckboxGroup
   */
  layout?: CatalogCheckboxGroupLayoutEnum
  /**
   *
   * @type {Array<string>}
   * @memberof CatalogCheckboxGroup
   */
  initial: Array<string> | null
  /**
   *
   * @type {Array<CatalogCheckboxGroupOptions>}
   * @memberof CatalogCheckboxGroup
   */
  options: Array<CatalogCheckboxGroupOptions>
  /**
   *
   * @type {Validation}
   * @memberof CatalogCheckboxGroup
   */
  validation: Validation
}

/**
 * @export
 * @enum {string}
 */
export enum CatalogCheckboxGroupTypeEnum {
  CheckboxGroup = 'checkbox-group',
  Select = 'select',
}
/**
 * @export
 * @enum {string}
 */
export enum CatalogCheckboxGroupStrategyEnum {
  Any = 'any',
  OnlyOne = 'only-one',
  ByDefault = 'by-default',
}
/**
 * @export
 * @enum {string}
 */
export enum CatalogCheckboxGroupLayoutEnum {
  Row = 'row',
  Main = 'main',
  Wrap = 'wrap',
  Column = 'column',
}

export function CatalogCheckboxGroupFromJSON(json: any): CatalogCheckboxGroup {
  return CatalogCheckboxGroupFromJSONTyped(json, false)
}

export function CatalogCheckboxGroupFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CatalogCheckboxGroup {
  if (json === undefined || json === null) {
    return json
  }
  return {
    title: json['title'],
    type: json['type'],
    strategy: json['strategy'],
    layout: !exists(json, 'layout') ? undefined : json['layout'],
    initial: json['initial'],
    options: (json['options'] as Array<any>).map(CatalogCheckboxGroupOptionsFromJSON),
    validation: ValidationFromJSON(json['validation']),
  }
}

export function CatalogCheckboxGroupToJSON(value?: CatalogCheckboxGroup | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    title: value.title,
    type: value.type,
    strategy: value.strategy,
    layout: value.layout,
    initial: value.initial,
    options: (value.options as Array<any>).map(CatalogCheckboxGroupOptionsToJSON),
    validation: ValidationToJSON(value.validation),
  }
}
