/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  ValidationMessages,
  ValidationMessagesFromJSON,
  ValidationMessagesFromJSONTyped,
  ValidationMessagesToJSON,
} from './'

/**
 *
 * @export
 * @interface CatalogNumber
 */
export interface CatalogNumber {
  /**
   *
   * @type {string}
   * @memberof CatalogNumber
   */
  title?: string
  /**
   *
   * @type {string}
   * @memberof CatalogNumber
   */
  type: CatalogNumberTypeEnum
  /**
   *
   * @type {boolean}
   * @memberof CatalogNumber
   */
  required: boolean
  /**
   *
   * @type {number}
   * @memberof CatalogNumber
   */
  _default: number | null
  /**
   *
   * @type {number}
   * @memberof CatalogNumber
   */
  min: number
  /**
   *
   * @type {number}
   * @memberof CatalogNumber
   */
  max: number
  /**
   *
   * @type {ValidationMessages}
   * @memberof CatalogNumber
   */
  messages?: ValidationMessages
}

/**
 * @export
 * @enum {string}
 */
export enum CatalogNumberTypeEnum {
  Number = 'number',
}

export function CatalogNumberFromJSON(json: any): CatalogNumber {
  return CatalogNumberFromJSONTyped(json, false)
}

export function CatalogNumberFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CatalogNumber {
  if (json === undefined || json === null) {
    return json
  }
  return {
    title: !exists(json, 'title') ? undefined : json['title'],
    type: json['type'],
    required: json['required'],
    _default: json['default'],
    min: json['min'],
    max: json['max'],
    messages: !exists(json, 'messages')
      ? undefined
      : ValidationMessagesFromJSON(json['messages']),
  }
}

export function CatalogNumberToJSON(value?: CatalogNumber | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    title: value.title,
    type: value.type,
    required: value.required,
    default: value._default,
    min: value.min,
    max: value.max,
    messages: ValidationMessagesToJSON(value.messages),
  }
}
