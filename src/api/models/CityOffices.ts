/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import { CityPhones, CityPhonesFromJSON, CityPhonesFromJSONTyped, CityPhonesToJSON } from './'

/**
 *
 * @export
 * @interface CityOffices
 */
export interface CityOffices {
  /**
   *
   * @type {number}
   * @memberof CityOffices
   */
  id?: number
  /**
   *
   * @type {string}
   * @memberof CityOffices
   */
  address?: string
  /**
   *
   * @type {number}
   * @memberof CityOffices
   */
  latitude?: number | null
  /**
   *
   * @type {number}
   * @memberof CityOffices
   */
  longitude?: number | null
  /**
   *
   * @type {string}
   * @memberof CityOffices
   */
  officeWorkTime?: string | null
  /**
   *
   * @type {string}
   * @memberof CityOffices
   */
  callCenterWorkTime?: string | null
  /**
   *
   * @type {number}
   * @memberof CityOffices
   */
  initialPhoneId?: number | null
  /**
   *
   * @type {Array<CityPhones>}
   * @memberof CityOffices
   */
  phones?: Array<CityPhones>
}

export function CityOfficesFromJSON(json: any): CityOffices {
  return CityOfficesFromJSONTyped(json, false)
}

export function CityOfficesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CityOffices {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: !exists(json, 'id') ? undefined : json['id'],
    address: !exists(json, 'address') ? undefined : json['address'],
    latitude: !exists(json, 'latitude') ? undefined : json['latitude'],
    longitude: !exists(json, 'longitude') ? undefined : json['longitude'],
    officeWorkTime: !exists(json, 'office_work_time') ? undefined : json['office_work_time'],
    callCenterWorkTime: !exists(json, 'call_center_work_time')
      ? undefined
      : json['call_center_work_time'],
    initialPhoneId: !exists(json, 'initial_phone_id') ? undefined : json['initial_phone_id'],
    phones: !exists(json, 'phones')
      ? undefined
      : (json['phones'] as Array<any>).map(CityPhonesFromJSON),
  }
}

export function CityOfficesToJSON(value?: CityOffices | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    address: value.address,
    latitude: value.latitude,
    longitude: value.longitude,
    office_work_time: value.officeWorkTime,
    call_center_work_time: value.callCenterWorkTime,
    initial_phone_id: value.initialPhoneId,
    phones:
      value.phones === undefined ? undefined : (value.phones as Array<any>).map(CityPhonesToJSON),
  }
}
