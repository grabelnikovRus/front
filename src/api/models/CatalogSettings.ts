/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import {
  CatalogNumber,
  CatalogNumberFromJSON,
  CatalogNumberFromJSONTyped,
  CatalogNumberToJSON,
  CatalogSelect,
  CatalogSelectFromJSON,
  CatalogSelectFromJSONTyped,
  CatalogSelectToJSON,
  CatalogText,
  CatalogTextFromJSON,
  CatalogTextFromJSONTyped,
  CatalogTextToJSON,
} from './'

/**
 *
 * @export
 * @interface CatalogSettings
 */
export interface CatalogSettings {
  /**
   *
   * @type {CatalogText}
   * @memberof CatalogSettings
   */
  address: CatalogText
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  balconyType: CatalogSelect
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  buildingCeilingHeight: CatalogSelect
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  buildingFloorCountMax: CatalogNumber
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  buildingGarbageChute: CatalogSelect
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  buildingFloorCountMin: CatalogNumber
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  buildingParkingTypes: CatalogSelect
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  buildingTypes: CatalogSelect
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  decorationTypes: CatalogSelect
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  elevatorType: CatalogSelect
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  floorNumberMax: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  floorNumberMin: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  fullAreaMax: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  fullAreaMin: CatalogNumber
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  housingTypes: CatalogSelect
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  kitchensAreaMax: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  kitchensAreaMin: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  livingAreaMax: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  livingAreaMin: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  priceRubMax: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  priceRubMin: CatalogNumber
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  roominess: CatalogSelect
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  saleTypes: CatalogSelect
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  wcsType: CatalogSelect
  /**
   *
   * @type {CatalogSelect}
   * @memberof CatalogSettings
   */
  windowViewTypes: CatalogSelect
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  loanRateMax: CatalogNumber
  /**
   *
   * @type {CatalogNumber}
   * @memberof CatalogSettings
   */
  loanRateMin: CatalogNumber
}

export function CatalogSettingsFromJSON(json: any): CatalogSettings {
  return CatalogSettingsFromJSONTyped(json, false)
}

export function CatalogSettingsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): CatalogSettings {
  if (json === undefined || json === null) {
    return json
  }
  return {
    address: CatalogTextFromJSON(json['address']),
    balconyType: CatalogSelectFromJSON(json['balconyType']),
    buildingCeilingHeight: CatalogSelectFromJSON(json['buildingCeilingHeight']),
    buildingFloorCountMax: CatalogNumberFromJSON(json['buildingFloorCountMax']),
    buildingGarbageChute: CatalogSelectFromJSON(json['buildingGarbageChute']),
    buildingFloorCountMin: CatalogNumberFromJSON(json['buildingFloorCountMin']),
    buildingParkingTypes: CatalogSelectFromJSON(json['buildingParkingTypes']),
    buildingTypes: CatalogSelectFromJSON(json['buildingTypes']),
    decorationTypes: CatalogSelectFromJSON(json['decorationTypes']),
    elevatorType: CatalogSelectFromJSON(json['elevatorType']),
    floorNumberMax: CatalogNumberFromJSON(json['floorNumberMax']),
    floorNumberMin: CatalogNumberFromJSON(json['floorNumberMin']),
    fullAreaMax: CatalogNumberFromJSON(json['fullAreaMax']),
    fullAreaMin: CatalogNumberFromJSON(json['fullAreaMin']),
    housingTypes: CatalogSelectFromJSON(json['housingTypes']),
    kitchensAreaMax: CatalogNumberFromJSON(json['kitchensAreaMax']),
    kitchensAreaMin: CatalogNumberFromJSON(json['kitchensAreaMin']),
    livingAreaMax: CatalogNumberFromJSON(json['livingAreaMax']),
    livingAreaMin: CatalogNumberFromJSON(json['livingAreaMin']),
    priceRubMax: CatalogNumberFromJSON(json['priceRubMax']),
    priceRubMin: CatalogNumberFromJSON(json['priceRubMin']),
    roominess: CatalogSelectFromJSON(json['roominess']),
    saleTypes: CatalogSelectFromJSON(json['saleTypes']),
    wcsType: CatalogSelectFromJSON(json['wcsType']),
    windowViewTypes: CatalogSelectFromJSON(json['windowViewTypes']),
    loanRateMax: CatalogNumberFromJSON(json['loanRateMax']),
    loanRateMin: CatalogNumberFromJSON(json['loanRateMin']),
  }
}

export function CatalogSettingsToJSON(value?: CatalogSettings | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    address: CatalogTextToJSON(value.address),
    balconyType: CatalogSelectToJSON(value.balconyType),
    buildingCeilingHeight: CatalogSelectToJSON(value.buildingCeilingHeight),
    buildingFloorCountMax: CatalogNumberToJSON(value.buildingFloorCountMax),
    buildingGarbageChute: CatalogSelectToJSON(value.buildingGarbageChute),
    buildingFloorCountMin: CatalogNumberToJSON(value.buildingFloorCountMin),
    buildingParkingTypes: CatalogSelectToJSON(value.buildingParkingTypes),
    buildingTypes: CatalogSelectToJSON(value.buildingTypes),
    decorationTypes: CatalogSelectToJSON(value.decorationTypes),
    elevatorType: CatalogSelectToJSON(value.elevatorType),
    floorNumberMax: CatalogNumberToJSON(value.floorNumberMax),
    floorNumberMin: CatalogNumberToJSON(value.floorNumberMin),
    fullAreaMax: CatalogNumberToJSON(value.fullAreaMax),
    fullAreaMin: CatalogNumberToJSON(value.fullAreaMin),
    housingTypes: CatalogSelectToJSON(value.housingTypes),
    kitchensAreaMax: CatalogNumberToJSON(value.kitchensAreaMax),
    kitchensAreaMin: CatalogNumberToJSON(value.kitchensAreaMin),
    livingAreaMax: CatalogNumberToJSON(value.livingAreaMax),
    livingAreaMin: CatalogNumberToJSON(value.livingAreaMin),
    priceRubMax: CatalogNumberToJSON(value.priceRubMax),
    priceRubMin: CatalogNumberToJSON(value.priceRubMin),
    roominess: CatalogSelectToJSON(value.roominess),
    saleTypes: CatalogSelectToJSON(value.saleTypes),
    wcsType: CatalogSelectToJSON(value.wcsType),
    windowViewTypes: CatalogSelectToJSON(value.windowViewTypes),
    loanRateMax: CatalogNumberToJSON(value.loanRateMax),
    loanRateMin: CatalogNumberToJSON(value.loanRateMin),
  }
}
