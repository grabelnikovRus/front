/* tslint:disable */
/* eslint-disable */
/**
 * SITE API
 * API сайта ПИК Брокер
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import { CityOffices, CityOfficesFromJSON, CityOfficesFromJSONTyped, CityOfficesToJSON } from './'

/**
 *
 * @export
 * @interface City
 */
export interface City {
  /**
   *
   * @type {number}
   * @memberof City
   */
  id: number
  /**
   *
   * @type {string}
   * @memberof City
   */
  name: string
  /**
   *
   * @type {string}
   * @memberof City
   */
  subtitle: string | null
  /**
   *
   * @type {number}
   * @memberof City
   */
  latitude: number | null
  /**
   *
   * @type {number}
   * @memberof City
   */
  longitude: number | null
  /**
   *
   * @type {number}
   * @memberof City
   */
  bbox1Latitude: number | null
  /**
   *
   * @type {number}
   * @memberof City
   */
  bbox1Longitude: number | null
  /**
   *
   * @type {number}
   * @memberof City
   */
  bbox2Latitude: number | null
  /**
   *
   * @type {number}
   * @memberof City
   */
  bbox2Longitude: number | null
  /**
   *
   * @type {number}
   * @memberof City
   */
  initialOfficeId: number | null
  /**
   *
   * @type {Array<CityOffices>}
   * @memberof City
   */
  offices: Array<CityOffices>
}

export function CityFromJSON(json: any): City {
  return CityFromJSONTyped(json, false)
}

export function CityFromJSONTyped(json: any, ignoreDiscriminator: boolean): City {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: json['id'],
    name: json['name'],
    subtitle: json['subtitle'],
    latitude: json['latitude'],
    longitude: json['longitude'],
    bbox1Latitude: json['bbox1_latitude'],
    bbox1Longitude: json['bbox1_longitude'],
    bbox2Latitude: json['bbox2_latitude'],
    bbox2Longitude: json['bbox2_longitude'],
    initialOfficeId: json['initial_office_id'],
    offices: (json['offices'] as Array<any>).map(CityOfficesFromJSON),
  }
}

export function CityToJSON(value?: City | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    name: value.name,
    subtitle: value.subtitle,
    latitude: value.latitude,
    longitude: value.longitude,
    bbox1_latitude: value.bbox1Latitude,
    bbox1_longitude: value.bbox1Longitude,
    bbox2_latitude: value.bbox2Latitude,
    bbox2_longitude: value.bbox2Longitude,
    initial_office_id: value.initialOfficeId,
    offices: (value.offices as Array<any>).map(CityOfficesToJSON),
  }
}
